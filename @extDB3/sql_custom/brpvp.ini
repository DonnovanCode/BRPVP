[Default]
Version = 1
;; Used incase there is ever a breaking change, or to inform user in log about a new feature.

Strip Chars = ";[]"
;; List of characters to strip out

Strip Chars Mode = 0
;; 0 = Strip Bad Chars, 1 = Strip + Log Bad Chars, 2 = Return Error & Log Bad Chars
;;     Note: Logging on works when sending data to database.

Input SQF Parser = false
;; Expermential
;;   If enabled will use SQF Array Parser instead of : seperator for values
;;   i.e   0:SQL:UpdatePlayer:["Joe",[1,2,0],0.22333,"PlayerBackpack",-3]
;;   Advantage is that you don't need to strip : seperator from user inputted values

[getObjectOwnerName]
Prepared Statement = true
SQL1_1 = SELECT nome FROM players WHERE id = ? 
SQL1_INPUTS = 1
OUTPUT = 1-STRING

[getMessages]
Prepared Statement = true
SQL1_1 = SELECT id,msg_start,msg_end,msg_interval,msg_txt,msg_duration FROM messages
OUTPUT = 1,2,3,4,5-STRING,6

[addDestructionLog]
Prepared Statement = true
SQL1_1 = INSERT INTO destructions (owner,ownername,id,player,name,class) VALUES(?,(SELECT nome FROM players WHERE id=?),?,?,?,?)
SQL1_INPUTS = 1,2,3,4,5,6

[getDestructionLog]
Prepared Statement = true
SQL1_1 = SELECT owner,ownername,id,player,name,class,date FROM destructions WHERE owner = ? ORDER BY date DESC LIMIT 50
SQL1_INPUTS = 1
OUTPUT = 1,2-STRING,3,4-STRING,5-STRING,6-STRING,7

[getDestructionLogAll]
Prepared Statement = true
SQL1_1 = SELECT owner,ownername,id,player,name,class,date FROM destructions ORDER BY date DESC LIMIT 50
OUTPUT = 1,2-STRING,3,4-STRING,5-STRING,6-STRING,7

[createPlayer]
Prepared Statement = true
SQL1_1 = INSERT INTO players (nome,exp,steamKey,inventario,backpack,posicao,saude,modelo,armaNaMao,amigos,vivo,comp_padrao,money,specialItems,money_bank) VALUES(?,?,?,?,?,?,?,?,?,?,?,1,?,?,?)
SQL1_INPUTS = 9,10,1,2,3,4,5,6,7,8,11,12,13,14

[createVault]
Prepared Statement = true
SQL1_1 = INSERT INTO vault (steamKey,inventario,comp,amigos,idx) VALUES(?,?,?,?,?)
SQL1_INPUTS = 1,2,3,4,5

[getIdBdBySteamKey]
Prepared Statement = true
SQL1_1 = SELECT id FROM players WHERE steamKey = ?
SQL1_INPUTS = 1
OUTPUT = 1

[checkIfPlayerOnDb]
Prepared Statement = true
SQL1_1 = SELECT vivo FROM players WHERE steamKey = ?
SQL1_INPUTS = 1
OUTPUT = 1

[savePlayer]
Prepared Statement = true
SQL1_1 = UPDATE players SET inventario = ?,backpack = ?,posicao = ?,saude = ?,modelo = ?,armaNaMao = ?,amigos = ?,vivo = ?,exp = ?,comp_padrao = ?,money = ?, specialItems = ?, money_bank = ? WHERE steamKey = ?
SQL1_INPUTS = 1,2,3,4,5,6,8,9,10,11,12,13,14,7

[savePlayerName]
Prepared Statement = true
SQL1_1 = UPDATE players SET nome = ? WHERE id = ?
SQL1_INPUTS = 1,2

[savePlayerAmg]
Prepared Statement = true
SQL1_1 = UPDATE players SET amigos = ? WHERE id = ?
SQL1_INPUTS = 1,2

[savePlayerComp]
Prepared Statement = true
SQL1_1 = UPDATE players SET comp_padrao = ? WHERE id = ?
SQL1_INPUTS = 1,2

[saveVault]
Prepared Statement = true
SQL1_1 = UPDATE vault SET inventario = ?,comp = ? WHERE steamKey = ? AND idx = ?
SQL1_INPUTS = 2,3,1,4

[getPlayerNextLifeVals]
Prepared Statement = true
SQL1_1 = SELECT amigos,exp,id,comp_padrao,money,specialItems,money_bank FROM players WHERE steamKey = ?
SQL1_INPUTS = 1
OUTPUT = 1,2,3,4,5,6,7

[getPlayer]
Prepared Statement = true
SQL1_1 = SELECT inventario,backpack,posicao,saude,modelo,armaNaMao,amigos,exp,id,comp_padrao,money,specialItems,money_bank FROM players WHERE steamKey = ?
SQL1_INPUTS = 1
OUTPUT = 1,2,3,4,5,6-STRING,7,8,9,10,11,12,13

[getPlayerVault]
Prepared Statement = true
SQL1_1 = SELECT inventario,comp,idx FROM vault WHERE steamKey = ? AND idx = ?
SQL1_INPUTS = 1,2
OUTPUT = 1,2,3

[getConstructionIdByModelPos]
Prepared Statement = true
SQL1_1 = SELECT id FROM veiculos WHERE modelo = ? AND posicao = ? LIMIT 1
SQL1_INPUTS = 1,2
OUTPUT = 1

[saveVehicle]
Prepared Statement = true
SQL1_1 = UPDATE veiculos SET inventario = ?,posicao = ?,modelo = ?,owner = ?,comp = ?,amigos = ?,mapa = ?,`lock` = ? WHERE id = ?
SQL1_INPUTS = 1,2,3,4,5,6,7,8,9

[saveVehicleAmg]
Prepared Statement = true
SQL1_1 = UPDATE veiculos SET owner = ?,comp = ?,amigos = ? WHERE id = ?
SQL1_INPUTS = 1,2,3,4

[saveVehicleExec]
Prepared Statement = true
SQL1_1 = UPDATE veiculos SET exec = ? WHERE id = ?
SQL1_INPUTS = 1,2

[saveVehicleLock]
Prepared Statement = true
SQL1_1 = UPDATE veiculos SET `lock` = ? WHERE id = ?
SQL1_INPUTS = 1,2

[deleteVehicle]
Prepared Statement = true
SQL1_1 = DELETE FROM veiculos WHERE id = ?
SQL1_INPUTS = 1

[playerSetLife]
Prepared Statement = true
SQL1_1 = UPDATE players SET vivo = ? WHERE steamKey = ?
SQL1_INPUTS = 2,1

[getDbCommand]
Prepared Statement = true
SQL1_1 = SELECT salvar FROM salvar LIMIT 1
OUTPUT = 1-STRING

[setDbCommand]
Prepared Statement = true
SQL1_1 = UPDATE salvar SET salvar = ?
SQL1_INPUTS = 1

[getObjects]
Prepared Statement = true
SQL1_1 = SELECT * FROM (SELECT id,0 AS vago,inventario,posicao,modelo,owner,comp,amigos,mapa,exec,`lock` FROM veiculos ORDER BY id ASC) AS T1 WHERE id > ? LIMIT 2
SQL1_INPUTS = 1
OUTPUT = 1,2,3,4,5-STRING,6,7,8,9,10-STRING,11

[createVehicle]
Prepared Statement = true
SQL1_1 = INSERT INTO veiculos (inventario,posicao,modelo,owner,comp,amigos,mapa,exec,`lock`) VALUES(?,?,?,?,?,?,?,?,0)
SQL1_INPUTS = 1,2,3,4,5,6,7,8

[getMaxIdBd]
Prepared Statement = true
SQL1_1 = SELECT MAX(id) AS maxid FROM veiculos
OUTPUT = 1